<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cl.mapper.AdminsMapper">
  <resultMap id="BaseResultMap" type="com.cl.pojo.Admins">
    <id column="adminId" jdbcType="INTEGER" property="adminId" />
    <result column="loginName" jdbcType="VARCHAR" property="loginName" />
    <result column="petName" jdbcType="VARCHAR" property="petName" />
    <result column="adminPwd" jdbcType="VARCHAR" property="adminPwd" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="headImg" jdbcType="VARCHAR" property="headImg" />
    <result column="roleId" jdbcType="INTEGER" property="roleId" />
    <result column="lastLoginTime" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="isDel" jdbcType="INTEGER" property="isDel" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    adminId, loginName, petName, adminPwd, phone, headImg, roleId, lastLoginTime, status, 
    isDel
  </sql>
  <select id="selectByExample" parameterType="com.cl.pojo.AdminsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from admins
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from admins
    where adminId = #{adminId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from admins
    where adminId = #{adminId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.cl.pojo.AdminsExample">
    delete from admins
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cl.pojo.Admins">
    insert into admins (adminId, loginName, petName, 
      adminPwd, phone, headImg, 
      roleId, lastLoginTime, status, 
      isDel)
    values (#{adminId,jdbcType=INTEGER}, #{loginName,jdbcType=VARCHAR}, #{petName,jdbcType=VARCHAR}, 
      #{adminPwd,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{headImg,jdbcType=VARCHAR}, 
      #{roleId,jdbcType=INTEGER}, #{lastLoginTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, 
      #{isDel,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.cl.pojo.Admins">
    insert into admins
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="adminId != null">
        adminId,
      </if>
      <if test="loginName != null">
        loginName,
      </if>
      <if test="petName != null">
        petName,
      </if>
      <if test="adminPwd != null">
        adminPwd,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="headImg != null">
        headImg,
      </if>
      <if test="roleId != null">
        roleId,
      </if>
      <if test="lastLoginTime != null">
        lastLoginTime,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="isDel != null">
        isDel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="adminId != null">
        #{adminId,jdbcType=INTEGER},
      </if>
      <if test="loginName != null">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="petName != null">
        #{petName,jdbcType=VARCHAR},
      </if>
      <if test="adminPwd != null">
        #{adminPwd,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="headImg != null">
        #{headImg,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cl.pojo.AdminsExample" resultType="java.lang.Long">
    select count(*) from admins
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update admins
    <set>
      <if test="record.adminId != null">
        adminId = #{record.adminId,jdbcType=INTEGER},
      </if>
      <if test="record.loginName != null">
        loginName = #{record.loginName,jdbcType=VARCHAR},
      </if>
      <if test="record.petName != null">
        petName = #{record.petName,jdbcType=VARCHAR},
      </if>
      <if test="record.adminPwd != null">
        adminPwd = #{record.adminPwd,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.headImg != null">
        headImg = #{record.headImg,jdbcType=VARCHAR},
      </if>
      <if test="record.roleId != null">
        roleId = #{record.roleId,jdbcType=INTEGER},
      </if>
      <if test="record.lastLoginTime != null">
        lastLoginTime = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.isDel != null">
        isDel = #{record.isDel,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update admins
    set adminId = #{record.adminId,jdbcType=INTEGER},
      loginName = #{record.loginName,jdbcType=VARCHAR},
      petName = #{record.petName,jdbcType=VARCHAR},
      adminPwd = #{record.adminPwd,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      headImg = #{record.headImg,jdbcType=VARCHAR},
      roleId = #{record.roleId,jdbcType=INTEGER},
      lastLoginTime = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      isDel = #{record.isDel,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cl.pojo.Admins">
    update admins
    <set>
      <if test="loginName != null">
        loginName = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="petName != null">
        petName = #{petName,jdbcType=VARCHAR},
      </if>
      <if test="adminPwd != null">
        adminPwd = #{adminPwd,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="headImg != null">
        headImg = #{headImg,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        roleId = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="lastLoginTime != null">
        lastLoginTime = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="isDel != null">
        isDel = #{isDel,jdbcType=INTEGER},
      </if>
    </set>
    where adminId = #{adminId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cl.pojo.Admins">
    update admins
    set loginName = #{loginName,jdbcType=VARCHAR},
      petName = #{petName,jdbcType=VARCHAR},
      adminPwd = #{adminPwd,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      headImg = #{headImg,jdbcType=VARCHAR},
      roleId = #{roleId,jdbcType=INTEGER},
      lastLoginTime = #{lastLoginTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      isDel = #{isDel,jdbcType=INTEGER}
    where adminId = #{adminId,jdbcType=INTEGER}
  </update>
</mapper>